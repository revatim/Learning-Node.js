Debuggin and Easier Development
Understanding NPM Scripts
    npm : node package manager
    use npm to initialise the node project and add extra features to it

    npm init -> package.json
    we have a scripts file here, which we can use to add scripts
    eg. start (reserved word) -> npm start
    if we want to use a custom word that is not part of npm commands ::
    npm run name
    
    Usage: npm <command>

    where <command> is one of:
    access, adduser, audit, bin, bugs, c, cache, ci, cit,
    clean-install, clean-install-test, completion, config,
    create, ddp, dedupe, deprecate, dist-tag, docs, doctor,
    edit, explore, get, help, help-search, hook, i, init,
    install, install-ci-test, install-test, it, link, list, ln,
    login, logout, ls, org, outdated, owner, pack, ping, prefix,
    profile, prune, publish, rb, rebuild, repo, restart, root,
    run, run-script, s, se, search, set, shrinkwrap, star,
    stars, start, stop, t, team, test, token, tst, un,
    uninstall, unpublish, unstar, up, update, v, version, view
    
    nodemon :: to restart server when changes are made 
    * npm install nodemon --save-dev (development dependency)
    * npm install nodemon -g (globally install)
    * npm install nodemon --save (dependency)
    
Global Features vs Core Modules vs Third Party Modules
    You can basically differentiate between:

    1. Global features: Keywords like const or function but also some global objects like process

    2. Core Node.js Modules: Examples would be the file-system module ("fs"), the path module ("path") or the Http module ("http")

    3. Third-party Modules: Installed via npm install - you can add any kind of feature to your app via this way

    Global features are always available, you don't need to import them into the files where you want to use them.
    Core Node.js Modules don't need to be installed (NO npm install is required) but you need to import them when you want to use features exposed by them.
    
    
Using nodemon for Autorestart
    nodemon app.js (change start script npm !)
    directly using this command won't work as nodemon package is not installed globally 
    
Understanding different error types
    Types of error
        * Syntax Errors: (always result in error message) things like unexpected identifier and usually you get a specific line to work with
        * Runtime Errors: 
        * Logical Errors: Node.js debugger 
            https://code.visualstudio.com/docs/nodejs/nodejs-debugging
            https://nodejs.org/en/docs/guides/debugging-getting-started/
